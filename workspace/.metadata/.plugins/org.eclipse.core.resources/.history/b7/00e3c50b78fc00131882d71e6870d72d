import java.util.Arrays;
import java.util.Scanner;

public class Main {
	Scanner input = new Scanner(System.in);

	final int dx[] = { -1, 0, 0, 1 };
	final int dy[] = { 0, 1, -1, 0 };

	int N, M, g[][][], dis[][], f, t;
	boolean hsh[][];
	Grid q[];

	void run() {
		for (;;) {
			N = input.nextInt();
			M = input.nextInt();
			if (N == 0 && M == 0) {
				return;
			}
			g = new int[4][N][M];
			for (int i = 0; i < 4; ++i) {
				for (int j = 0; j < N; ++j) {
					for (int k = 0; k < M; ++k) {
						g[i][j][k] = 1;
					}
				}
			}
			dis = new int[N][M];
			hsh = new boolean[N][M];
			q = new Grid[N * M];
			for (int i = 0; i < N; ++i) {
				if (i > 0) {
					for (int j = 0; j < M; ++j) {
						g[0][i][j] = g[3][i - 1][j] = input.nextInt();
					}
				}
				for (int j = 1; j < M; ++j) {
					g[1][i][j - 1] = g[2][i][j] = input.nextInt();
				}
			}
/*
			for(int i = 0; i < N; ++i) {
				for(int j = 0; j < M; ++j) {
					System.out.println(i + " " + j + ": ");
					for(int k = 0; k < 4; ++k) {
						System.out.print(g[k][i][j]);
					}
					System.out.println();
				}
			}
*/
			for (int i = 0; i < N; ++i) {
				for (int j = 0; j < M; ++j) {
					dis[i][j] = Integer.MAX_VALUE;
				}
			}
			f = t = 0;
			q[t++] = new Grid(0, 0);
			dis[0][0] = 0;
			hsh[0][0] = true;
			while (f < t) {
				for (int i = 0; i < 4; ++i) {
					if (g[i][q[f].x][q[f].y] == 0) {
						int xx = q[f].x + dx[i], yy = q[f].y + dy[i];
						if (!hsh[xx][yy]) {
							dis[xx][yy] = dis[q[f].x][q[f].y] + 1;
							q[t++] = new Grid(xx, yy);
							hsh[xx][yy] = true;
						}
					}
				}
				++f;
			}
/*
			for (int i = 0; i < N; ++i) {
				for (int j = 0; j < M; ++j) {
					System.out.println(i + " " + j + ":" + dis[i][j]);
				}
			}
*/
			
		}
	}

	public static void main(String args[]) {
		new Main().run();
	}
}

class Grid {
	int x, y;

	Grid(int x, int y) {
		this.x = x;
		this.y = y;
	}
}
